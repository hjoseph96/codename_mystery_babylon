NDFramePage.OnPageTitleLoaded("CSharpClass:GridUtility","GridUtility");NDSummary.OnSummaryLoaded("CSharpClass:GridUtility",[["C#","CSharp"]],[["Classes","Class"],["Constants","Constant"],["Functions","Function"],["Groups","Group"],["Variables","Variable"]],[[3482,0,0,"GridUtility"],[3483,0,3,"Constants","Constants"],[3484,0,1,"MaxAttackRange","MaxAttackRange"],[3485,0,3,"Variables","Variables"],[3486,0,4,"AttackPositions","AttackPositions"],[3487,0,4,"DefaultNeighboursOffsets","DefaultNeighboursOffsets"],[3488,0,4,"DiagonalNeighborOffsets","DiagonalNeighborOffsets"],[3489,0,4,"RightToLeftStairsNeighboursOffsets","RightToLeftStairsNeighboursOffsets"],[3490,0,4,"LeftHalfRightToLeftStairsNeighboursOffsets","LeftHalfRightToLeftStairsNeighboursOffsets"],[3491,0,4,"RightHalfRightToLeftStairsNeighboursOffsets","RightHalfRightToLeftStairsNeighboursOffsets"],[3492,0,4,"LeftToRightStairsNeighboursOffsets","LeftToRightStairsNeighboursOffsets"],[3493,0,4,"LeftHalfLeftToRightStairsNeighboursOffsets","LeftHalfLeftToRightStairsNeighboursOffsets"],[3494,0,4,"RightHalfLeftToRightStairsNeighboursOffsets","RightHalfLeftToRightStairsNeighboursOffsets"],[3495,0,3,"Functions","Functions"],[3496,0,2,"GridUtility","GridUtility"],[3497,0,2,"GetDirection","GetDirection"],[3498,0,2,"GetNeighboursOffsets","GetNeighboursOffsets"],[3499,0,2,"GetNeighbours","GetNeighbours"],[3500,0,2,"GetDiagonalNeigbors","GetDiagonalNeigbors"],[3501,0,2,"GetBoxDistance","GetBoxDistance"],[3502,0,2,"SnapToGrid","SnapToGrid"],[3503,0,2,"GetReachableCells","GetReachableCells"],[3504,0,2,"GetReachableCellNeighbours","GetReachableCellNeighbours"],[3505,0,2,"GetAttackableCells","GetAttackableCells"],[3506,0,2,"FindPath","FindPath"],[3507,0,2,"FindPath","FindPath(2)"],[3508,0,2,"HasLineOfSight","HasLineOfSight"],[3509,0,2,"HasLineOfSight","HasLineOfSight(2)"],[3510,0,2,"ManhattanHeuristic","ManhattanHeuristic"],[3511,0,2,"ManhattanHeuristicWithTieBreaks","ManhattanHeuristicWithTieBreaks"],[3512,0,2,"ManhattanHeuristicWithInverseTieBreaks","ManhattanHeuristicWithInverseTieBreaks"],[3513,0,2,"EuclideanHeuristic","EuclideanHeuristic"],[3514,0,2,"DefaultCellLOSValidator","DefaultCellLOSValidator"],[3515,0,2,"CellLOSValidatorWithHeight","CellLOSValidatorWithHeight"],[3516,0,2,"RestorePath","RestorePath"]]);