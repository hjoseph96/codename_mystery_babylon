NDSummary.OnToolTipsLoaded("CSharpClass:GridUtility",{3482:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3482\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public static</span></div><div class=\"CPName\">GridUtility</div></div></div></div>",3484:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3484\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public const int</span> MaxAttackRange</div></div></div>",3486:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3486\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static readonly</span> Vector2Int[][] AttackPositions</div></div></div>",3487:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3487\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] DefaultNeighboursOffsets</div></div></div>",3488:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3488\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] DiagonalNeighborOffsets</div></div></div>",3489:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3489\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] RightToLeftStairsNeighboursOffsets</div></div></div>",3490:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3490\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] LeftHalfRightToLeftStairsNeighboursOffsets</div></div></div>",3491:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3491\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] RightHalfRightToLeftStairsNeighboursOffsets</div></div></div>",3492:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3492\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] LeftToRightStairsNeighboursOffsets</div></div></div>",3493:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3493\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] LeftHalfLeftToRightStairsNeighboursOffsets</div></div></div>",3494:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3494\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public static</span> Vector2Int[] RightHalfLeftToRightStairsNeighboursOffsets</div></div></div>",3496:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3496\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">static</span> GridUtility()</div></div></div>",3497:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3497\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> Direction GetDirection(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName\">from,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName\">to,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">roundToCardinal</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">allowDiagonalOutput</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3498:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3498\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> Vector2Int[] GetNeighboursOffsets(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">sortingLayerId,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">position</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Used to get an array of neighbour offsets for a specific point in grid with respect of stairs For non-stairs tile with non-stairs neighbours result is an array of fours cardinal directions Mostly used for pathfinding</div></div>",3499:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3499\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> List&lt;Vector2Int&gt; GetNeighbours(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">sortingLayerId,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">gridPosition</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3500:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3500\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> List&lt;Vector2Int&gt; GetDiagonalNeigbors(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">gridPosition</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3501:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3501\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static int</span> GetBoxDistance(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">from,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">to</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3502:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3502\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> Vector2Int SnapToGrid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">MonoBehaviour&nbsp;</td><td class=\"PName last\">monoBehaviour</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Snaps MonoBehavior\'s GameObject to WorldGrid</div></div>",3503:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3503\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> HashSet&lt;Vector2Int&gt; GetReachableCells(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Unit&nbsp;</td><td class=\"PName\">unit,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">movePoints</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHNumber\">-1</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">fullRadiusMode</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">includeEnemy</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Finds all grid cells than can be reached by unit</div></div>",3504:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3504\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> HashSet&lt;Vector2Int&gt; GetReachableCellNeighbours(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">targetCell,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">radius,</td></tr><tr><td class=\"PType first\">Unit&nbsp;</td><td class=\"PName last\">unit</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Finds all grid cells than can be reached by unit within a specified range of a target `GridPosition`</div></div>",3505:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3505\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> List&lt;Vector2Int&gt; GetAttackableCells(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Unit&nbsp;</td><td class=\"PName\">unit,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">HashSet&lt;Vector2Int&gt;&nbsp;</td><td class=\"PName\">reachableCells,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Weapon&nbsp;</td><td class=\"PName\">weapon</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Finds all grid cells than can be attacked by unit</div></div>",3506:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3506\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> GridPath FindPath(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Unit&nbsp;</td><td class=\"PName\">unit,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName\">start,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName\">goal,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">maxCost</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">int</span>.MaxValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Finds path for unit between 2 points using A*</div></div>",3507:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3507\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> GridPath FindPath(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Unit&nbsp;</td><td class=\"PName\">unit,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName\">goal,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">maxCost</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">int</span>.MaxValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Finds path for unit from its current position to goal</div></div>",3508:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3508\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> HasLineOfSight(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">sortingLayerId,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Vector2Int&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Vector2Int&nbsp;</td><td class=\"PName last\">end,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Func&lt;<span class=\"SHKeyword\">int</span>, Vector2Int, Vector2Int, <span class=\"SHKeyword\">bool</span>&gt;&nbsp;</td><td class=\"PName last\">validator,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">GridLine&nbsp;</td><td class=\"PName last\">gridLine</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Checks if there\'s a line of sight between two points</div></div>",3509:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3509\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> HasLineOfSight(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">sortingLayerId,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">end</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Checks if there\'s a line of sight between two points. Takes tiles LOS and Height properties into account</div></div>",3510:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3510\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static float</span> ManhattanHeuristic(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">from,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">to</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3511:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3511\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static float</span> ManhattanHeuristicWithTieBreaks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">from,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">to</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3512:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3512\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static float</span> ManhattanHeuristicWithInverseTieBreaks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">from,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">to</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3513:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3513\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static float</span> EuclideanHeuristic(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">from,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">to</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3514:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3514\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> DefaultCellLOSValidator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">sortingLayerId,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">cell</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3515:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3515\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> CellLOSValidatorWithHeight(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">sortingLayerId,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">cell</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",3516:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3516\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static</span> List&lt;Vector2Int&gt; RestorePath(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"PType first\">Vector2Int&nbsp;</td><td class=\"PName last\">goal,</td></tr><tr><td class=\"PType first\">Dictionary&lt;Vector2Int, Vector2Int&gt;&nbsp;</td><td class=\"PName last\">cameFrom</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>"});